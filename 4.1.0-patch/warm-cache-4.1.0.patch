diff -Naur warm-cache-4.1.0-clean/warm_cache_crawl.php warm-cache-4.1.0-smallpatch/warm_cache_crawl.php
--- warm-cache-4.1.0-clean/warm_cache_crawl.php	2023-02-13 14:42:42.000000000 +0200
+++ warm-cache-4.1.0-smallpatch/warm_cache_crawl.php	2023-03-13 19:10:57.020268990 +0200
@@ -10,8 +10,10 @@
 	private $start;
 	private $limit;
 	private $hits;
+	private $index;
 	private $useflush;
 	private $pid_lock;
+	private $content_encodings = array ("br", "gzip");
 
 
 	public function crawl_limit_filter( $limit ) {
@@ -20,7 +22,7 @@
 			if( $newlimit > 0 ) {
 				return $newlimit;
 			}
-		}	    
+		}		
 		return $limit;
 	}
 
@@ -30,6 +32,7 @@
 		header("Cache-Control: no-store, no-cache, must-revalidate, max-age=0");
 		header("Cache-Control: post-check=0, pre-check=0", false);
 		header("Pragma: no-cache");
+		header("X-Accel-Buffering: no");
 
 
 		add_filter( 'mp_warm_cache_limit_filters', array( $this, 'crawl_limit_filter' ) , 10, 1 );
@@ -40,6 +43,8 @@
 		if( $is_locked ) {
 			echo 'Lock active, stopped processing. Wait 60 seconds';
 			die();
+		} else {
+			set_transient( $this->pid_lock, 'Busy', MINUTE_IN_SECONDS );
 		}
 	
 		$warm_cache = new warm_cache();
@@ -49,7 +54,8 @@
 
 		$this->limit = apply_filters( 'mp_warm_cache_limit_filters', get_option( 'plugin_warm_cache_limit', 20 ) );
 
-		$this->start = get_option( 'plugin_warm_cache_start', 0 );
+		$start_p = get_option( 'plugin_warm_cache_start', 0 );
+		$this->start = ($start_p!==false) ? $start_p : 0;
 
 		echo 'Start at item '.$this->start. ' limit '. $this->limit;
 		$mtime = microtime();
@@ -59,7 +65,8 @@
 	
 		@set_time_limit(0);
 	
-		ob_start();
+		// flush any output buffers
+		while ( @ob_end_flush() ) ;
 
 		// For stats
 		$statdata = get_option( 'plugin_warm_cache_statdata' );
@@ -72,6 +79,7 @@
 		$this->newvalue = array();
 		$this->totalcount = 0;
 		$this->hits = 0;
+		$this->index = 0;
 		$this->newvalue['url'] = $sitemap_url;
 		$this->newvalue['time_start'] = time();
 		$this->newvalue['pages'] = array();
@@ -83,13 +91,13 @@
 		// Give it some time to post-process
 		set_transient( $this->pid_lock, 'Busy', 10 );
 
-		// Increase counter
-		$newstart = $this->start+$this->limit;
-		if( $this->hits == 0 ) {
-			// None found, we crossed the border, reset to zero
-			echo 'no hits, resetting the start to zero for next time';
+		// check to see if we managed to process all URLs in the sitemaps
+		if ( ( ( $this->hits == $this->totalcount ) && ($this->totalcount <= $this->limit) ) || ( !$this->hits && $this->totalcount ) || ( $this->start + $this->hits >= $this->totalcount ) ) {
 			$newstart = 0;
+		} else {
+			$newstart = $this->start + $this->limit;
 		}
+
 		echo "<br/>Updating to start (next time) at : $newstart";
 		update_option( 'plugin_warm_cache_start', $newstart);
 	
@@ -149,6 +157,7 @@
 		}
 	
 	
+		delete_transient( $this->pid_lock );
 		die();
 	}
 	
@@ -164,6 +173,9 @@
 		
 		
 		$xml = simplexml_load_string( $xmldata );
+		if ($xml === false) {
+			return;
+		}
 		
 		$cnt = 0;
 		if( $xml->url ) {
@@ -171,27 +183,54 @@
 		}
 		if( $cnt > 0 )
 		{
-			for($i = -1; $i < $cnt; $i++){
-				if( $this->hits >= $this->limit ) {
+			$this->totalcount += $cnt;
+			if ( ( $this->start > $this->index ) && ($this->start > $this->index + $cnt ) ) {
+				$this->index += $cnt;
+				return;
+			}
+
+			for($i = 0; $i < $cnt; $i++){
+				$this->index++;
+
+				if ( $this->hits >= $this->limit ) {
 					return;
 				}
-				
-				if( $this->totalcount <= ( $this->start+$this->limit ) && $this->totalcount > $this->start) {
+
+				if ( $this->index > $this->start ) {
 					$this->hits++;
 					$page = (string)$xml->url[$i]->loc;
 					echo '<br/>Busy with: '.$page;
 
 					set_transient( $this->pid_lock, 'Busy', MINUTE_IN_SECONDS );
 
-					$this->newvalue['pages'][] = $page;
+					// cache "plain" (e.g no headers) version of the pages
 					$tmp = wp_remote_get( $page );
-					// 	https://wordpress.org/support/topic/needs-flush-to-write-buffers-to-prevent-timeouts
-					if( $this->useflush == 'yes' && function_exists( 'flush' ) )
-					{
+					if ( $this->useflush == 'yes' && function_exists( 'flush' ) ) {
 						flush(); // prevent timeout from the loadbalancer
 					}
+
+					// try to cache both Brotli and Gzip versions of the pages
+					foreach ($this->content_encodings as $content_encoding) {
+						$args = array(
+							'headers' => array( "Accept-Encoding" => $content_encoding )
+						);
+						$tmp = wp_remote_get( $page, $args );
+						if ( $this->useflush == 'yes' && function_exists( 'flush' ) ) {
+							flush(); // prevent timeout from the loadbalancer
+						}
+					}
+
+					// try to cache both Brotli and Gzip versions of the pages, with "standard" Google Chrome Accept header
+					foreach ($this->content_encodings as $content_encoding) {
+						$args = array(
+							'headers' => array( "Accept-Encoding" => $content_encoding, "Accept" => "text/html,application/xhtml+xml,application/xml" )
+						);
+						$tmp = wp_remote_get( $page, $args );
+						if ( $this->useflush == 'yes' && function_exists( 'flush' ) ) {
+							flush(); // prevent timeout from the loadbalancer
+						}
+					}
 				}
-				$this->totalcount++;
 			}
 		}
 		else
@@ -205,11 +244,12 @@
 			{
 				for( $i = 0;$i < $cnt; $i++ ){
 					$sub_sitemap_url = (string)$xml->sitemap[$i]->loc;
-					echo "<br/>Start with submap: ".$sub_sitemap_url;
-					$this->mp_process_sitemap( $sub_sitemap_url, true );
+					if ( $this->hits <= $this->limit ) {
+						echo "<br/>Start with submap: ".$sub_sitemap_url;
+						$this->mp_process_sitemap( $sub_sitemap_url, true );
+					}
 				}				
 			}
 		}
 	}
 }
-define( 'WARM_CACHE_CRAWL_CLASS' , true );
diff -Naur warm-cache-4.1.0-clean/warm-cache.php warm-cache-4.1.0-smallpatch/warm-cache.php
--- warm-cache-4.1.0-clean/warm-cache.php	2023-03-13 19:10:34.057085749 +0200
+++ warm-cache-4.1.0-smallpatch/warm-cache.php	2023-03-13 19:10:57.022269006 +0200
@@ -69,7 +69,7 @@
 			if(!isset($_POST['update_sitemap']) || !$_POST['update_sitemap']) {
 				echo '<div class="error"><p>';
 				_e( 'A notice from plugin Warm-cache: Your configured sitemap url is not configured, I cannot crawl your pages.', 'managedwphosting_warmcache');
-				echo '<a href="'.admin_url('plugins.php?page=warm-cache%2Fwarm-cache.php').'">'._('Update your sitemap url now', 'managedwphosting_warmcache').'</a>.</p></div>';
+				echo '<a href="'.admin_url('plugins.php?page=warm-cache%2Fwarm-cache.php').'">'.__( 'Update your sitemap url now', 'managedwphosting_warmcache' ).'</a>.</p></div>';
 			}
 		} else {
 			// Check sitemap validity
@@ -156,8 +156,15 @@
 
 		register_post_type( 'warmcache', $args );	
 
-		if( defined( 'WARM_CACHE_CRAWL_CLASS' ) ) {
+		if ( isset( $_GET['warm-key'] ) && !empty( $_GET['warm-key'] ) && sanitize_text_field($_GET['warm-key']) == get_option( 'plugin_warm_cache_api' ) ) {
+			require_once( 'warm_cache_crawl.php' );
 			$warm_cache_crawler = new warm_cache_crawl();
+		} else {
+			if ( is_admin() ) {
+				add_action( 'admin_menu', array( 'warm_cache', 'addPluginSubMenu_' ) );
+				add_filter( 'plugin_row_meta', array( 'warm_cache', 'addPluginContent_' ), 10, 2 );
+				add_action( 'admin_notices', array( 'warm_cache', 'admin_notices' ) );
+			}
 		}
 
 	}
@@ -385,18 +392,5 @@
 	}
 }
 
-add_action( 'init', array('warm_cache', 'init' ) );
 
-if( isset( $_GET['warm_cache'] ) && !empty( $_GET['warm_cache'] ) && $_GET['warm_cache'] == get_option( 'plugin_warm_cache_api' ) )
-{
-	include( 'warm_cache_crawl.php' );
-}
-else
-{
-	if( is_admin() )
-	{
-		add_action( 'admin_menu', array( 'warm_cache', 'addPluginSubMenu_' ) );
-		add_filter( 'plugin_row_meta', array( 'warm_cache', 'addPluginContent_' ), 10, 2 );
-		add_action( 'admin_notices', array( 'warm_cache', 'admin_notices' ) );
-	}
-}
+add_action( 'init', array('warm_cache', 'init' ) );
